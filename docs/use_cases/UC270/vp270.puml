@startuml sd

participant Route as route
participant ElevadorController as ctrl
participant ElevadorService as svc
participant ElevadorRepo as repoEle
participant EdificioRepo as repoEdi
participant PisoRepo as repoPis
participant ElevadorMapper as mapper
participant ElevadorSchema as schema
participant ConfigurationFile as conf
participant Elevador as model

activate route
route -> ctrl : /createElevador
activate ctrl
ctrl -> conf : injeta o serviço do elevador
activate conf
conf --> ctrl
deactivate conf
ctrl -> svc : createElevador(IElevadorDTO)
activate svc
svc -> conf : injeta o repositório do elevador
activate conf
conf --> svc
deactivate conf
svc -> repoEle : findByNumeroIdentificativo(elevadorDTO.numeroIdentificativo)
activate repoEle
repoEle --> svc
deactivate repoEle
alt elevador existe
    svc -> ctrl : Envia erro com a mensagem: Já existe um elevador com o código X
end
svc -> repoEdi : findByCodigo(elevadorDTO.edificio)
activate repoEdi
repoEdi --> svc
deactivate repoEdi
alt edificio não existe/é inválido
    svc --> ctrl : Envia erro com a mensagem: Não existe nenhum edifício com o código X
end
svc -> repoPis : findByEdificio(elevadorDTO.edificio)
activate repoPis
repoPis --> svc
deactivate repoPis
alt edifício não tem pisos
    svc --> ctrl : Envia erro com a mensagem: O edificio X não tem pisos.
end
loop todos os pisos de elevadorDTO.pisosServidos
    svc -> svc : verifica se o piso pertence ao elevadorDTO.edificio.
end
alt um qualquer piso não pertence ao edificio
    svc --> ctrl : Envia erro com a mensagem: O piso X não pertence ao edificio Y.
end
svc -> model : elevador = create(elevadorDTO)
activate model
model --> svc
deactivate model
svc -> repoEle : save(elevador)
activate repoEle
repoEle -> conf : injeta o schema do elevador
activate conf
conf --> repoEle
deactivate conf
repoEle -> mapper : toPersistence(elevador)
activate mapper
mapper --> repoEle
deactivate mapper
repoEle -> schema : create(elevadorCreated)
activate schema
schema --> repoEle
deactivate schema
repoEle -> mapper : toDomain(elevadorCreated)
activate mapper
mapper --> repoEle
deactivate mapper
repoEle --> svc
deactivate repoEle
svc -> mapper : toDTO(elevador)
activate mapper
mapper --> svc
deactivate mapper
svc --> ctrl
deactivate svc
alt caso de sucesso
    ctrl --> route : Envia um código 201 (OK)
else caso de insucesso
    ctrl --> route : Envia um código 403 (NOT FOUND)
end
deactivate ctrl
deactivate route



@enduml