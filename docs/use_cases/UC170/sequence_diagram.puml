@startuml sd


participant Route as route
participant InterfaceEdificioController as ictrl
participant EdificioController as ctrl
participant InterfaceEdificioService as isvc
participant EdificioService as svc
participant InterfaceEdificioRepo as irepo
participant EdificioRepo as repo
participant EdificioMapper as mapper
participant InterfaceEdificioPersistence as ischema
participant EdificioSchema as schema
participant ConfigurationFile as conf
participant Edificio as model


activate route
route -> ictrl : listar todos os edificios
activate ictrl
ictrl -> ctrl : listEdificios(req, res, next)
activate ctrl
ctrl -> conf : injeta o serviço do edificio
activate conf
conf --> ctrl
deactivate conf
ctrl -> isvc : listEdificios()
activate isvc
isvc -> svc : listEdificios()
activate svc
svc -> conf : injeta o repositório do edificio
activate conf
conf --> svc
deactivate conf
svc -> irepo : edificios = listEdificios()
activate irepo
irepo -> repo : listEdificios()
activate repo
repo -> conf : injeta o schema dos edificios
activate conf
conf --> repo
deactivate conf
repo -> ischema : listEdificios()
activate ischema
ischema -> schema : listEdificios()
activate schema
schema --> ischema
deactivate schema
deactivate schema
ischema --> repo
deactivate ischema
repo -> mapper: toDomain(edificios)
activate mapper
mapper --> repo
deactivate mapper
repo --> irepo
deactivate repo
irepo --> svc
deactivate irepo
svc -> mapper: toDTO(edificio)
activate mapper
mapper --> svc
deactivate mapper
svc --> isvc
deactivate svc
isvc --> ctrl
deactivate isvc
alt caso de sucesso
    ctrl --> ictrl : Envia um código 201 (GET)
else caso de insucesso
    ctrl --> ictrl : Envia um código 404 (NOT FOUND)
end
deactivate ctrl
ictrl --> route
deactivate ictrl
deactivate route
