@startuml sd


participant PisoRoute as route
participant InterfacePisoController as ictrl
participant PisoController as ctrl
participant InterfacePisoService as isvc
participant PisoService as svc
participant InterfacePisoRepo as irepo
participant InterfaceSalaRepo as isrepo
participant InterfaceEdificioRepo as ierepo
participant PisoRepo as repo
participant SalaRepo as srepo
participant EdificioRepo as erepo
participant PisoMapper as mapper
participant SalaMapper as smapper
participant EdificioMapper as emapper
participant InterfacePisoPersistence as ischema
participant InterfaceSalaPersistence as isschema
participant InterfaceEdificioPersistence as ieschema
participant PisoSchema as schema
participant SalaSchema as sschema
participant EdificioSchema as eschema
participant ConfigurationFile as conf
participant Piso as model


route -> ictrl++ : createPiso(req,res,next)
route++
ictrl -> ctrl : createPiso(req,res,next)
ctrl++
ctrl -> conf : injeta o serviço do piso
conf++
conf --> ctrl
conf--
ctrl -> isvc : createPiso(pisoDTO)
isvc++
isvc -> svc : createPiso(IPisoDTO)
svc++
svc -> conf : injeta o repositório do piso
conf++
conf --> svc
conf--
svc -> conf : injeta o repositório da sala
conf++
conf --> svc
conf--
svc -> conf : injeta o repositório do edificio
conf++
conf --> svc
conf--
svc -> irepo : findByDesignacao(designacao)
irepo++
irepo -> repo : findByDesignacao(designacao)
repo++
repo -> conf : injeta o schema dos pisos
conf++
conf --> repo
conf--
repo -> ischema : findOne(query)
ischema++
ischema -> schema : findOne(query)
schema++
schema --> ischema
schema--
ischema --> repo
ischema--
repo -> mapper : toDomain(pisoRecord)
mapper++
mapper --> repo
mapper--
repo--> irepo
repo--
irepo --> svc


svc -> ierepo : findByCodigo(edificio)
ierepo -> erepo : findByCodigo(edificio)
erepo++
erepo -> conf : injeta o schema dos edificios
conf++
conf --> erepo
conf--
erepo -> ieschema : findOne(query)
ieschema++
ieschema -> eschema : findOne(query)
eschema++
eschema --> ieschema
eschema--
ieschema --> erepo
ieschema--
erepo -> emapper : toDomain(edificioRecord)
emapper++
emapper --> erepo
emapper--
erepo--> ierepo
erepo--
ierepo --> svc
ierepo--

svc -> model : create()
model++
model --> svc
model--
svc -> irepo: save(piso)
irepo -> repo :save(piso)
repo++
repo -> ischema : findOne(query)
ischema++
ischema -> schema : findOne(query)
schema++
schema --> ischema
schema--
ischema --> repo
alt cria piso
repo -> mapper : toPersistence(piso)
mapper++
mapper --> repo
mapper--
repo -> ischema : create(rawPiso)
ischema -> schema : create(rawPiso)
schema++
schema --> ischema
schema--
ischema --> repo
ischema--
repo -> mapper : toDomain(pisoCreated)
mapper++
mapper --> repo
mapper--
else atualiza piso
end
repo --> irepo
repo--
irepo --> svc
irepo--
svc -> mapper : toDTO(pisoResult)
mapper++
mapper --> svc
mapper--
svc --> isvc 
svc--
isvc --> ctrl
isvc--
ctrl --> ictrl
alt caso de sucesso
    ctrl --> ictrl : Envia um código 201 (POST)
else caso de insucesso
    ctrl --> ictrl : Envia um código 404 (NOT FOUND)
end
ctrl--
ictrl --> route
