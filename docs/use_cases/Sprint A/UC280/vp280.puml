@startuml sd

participant Route as route
participant ElevadorController as ctrl
participant ElevadorService as svc
participant ElevadorRepo as repoEle
participant EdificioRepo as repoEdi
participant PisoRepo as repoPis
participant ElevadorSchema as schema
participant ElevadorMapper as mapper
participant ConfigurationFile as conf
participant Elevador as model

activate route
route -> ctrl : /updateElevador
activate ctrl
ctrl -> conf : injeta o serviço do elevador, edificio e piso
activate conf
conf --> ctrl
deactivate conf
ctrl -> svc : updateElevador(elevadorDTO)
activate svc
svc -> conf : injeta o repositório do elevador
activate conf
conf --> svc
deactivate conf
svc -> repoEle : elevador = findByNumeroIdentificativo(elevadorDTO.numeroIdentificativo)
activate repoEle
repoEle --> svc
deactivate repoEle
alt elevador não existe
    svc --> ctrl : Erro com a mensagem: Elevador não encontrado
    ctrl --> route : Envia um status 404 (NOT FOUND)
end
svc -> repoEdi : findByCodigo(elevadorDTO.edificio)
activate repoEdi
repoEdi --> svc
deactivate repoEdi
alt novo edificio é inválido
    svc --> ctrl : Erro com a mensagem: Edifício com o código X não encontrado
    ctrl --> route : Envia um stastus 404 (NOT FOUND)
end
svc -> repoPis : findByEdificio(elevadorDTO.edificio)
activate repoPis
repoPis --> svc
deactivate repoPis
loop todos os pisos de elevadorDTO.pisosServidos
    svc -> svc : verifica se o piso pertence ao elevadorDTO.edificio.
end
alt um qualquer piso não pertence ao edificio
    svc --> ctrl : Envia erro com a mensagem: O piso X não pertence ao edificio Y.
    ctrl --> route : Envia um status 404 (NOT FOUND)
end
svc -> model : elevador atualiza os campos
activate model
model --> svc
deactivate model
svc -> repoEle : save(elevador)
activate repoEle
repoEle -> conf : injeta o schema do elevador
activate conf
conf --> repoEle
deactivate conf
repoEle -> mapper : toPersistence(elevador)
activate mapper
mapper --> repoEle
deactivate mapper
repoEle -> schema : create(elevadorCreated)
activate schema
schema --> repoEle
deactivate schema
repoEle -> mapper : toDomain(elevadorCreated)
activate mapper
mapper --> repoEle
deactivate mapper
repoEle --> svc
deactivate repoEle
svc -> mapper : toDTO(elevador)
activate mapper
mapper --> svc
deactivate mapper
svc --> ctrl
deactivate svc
ctrl --> route : Envia status 200 (OK)
deactivate route




@enduml