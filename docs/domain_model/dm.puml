@startuml DDD

hide circle
hide fields

!theme crt-green
skinparam nodesep 150
hide empty members
left to right direction

package "<<agr MapaCampus>>"{
    class MapaCampus<<entity>><<root>>{}
    class GrelhaCampus<<vo>>{}

    MapaCampus --> "1" GrelhaCampus
}

package "<<agr Edificio>>"{
    class Edificio<<entity>><<root>>{}
    class DesignaçãoEdficio<<vo>>{}

    MapaCampus --> "*" Edificio
    Edificio --> "1" DesignaçãoEdficio
}

package "<<agr Elevador>>"{
    class Elevador<<entity>><<root>>{}
    class ElevadorDesignacao<<vo>>{}

    Edificio --> "*" Elevador
    Elevador --> "1" ElevadorDesignacao

}

' Faz sentido ser um agregado à parte por estar sujeito a mudanças, obras por exemplo. Confirmar.
package "<<agr MapaEdificio>>"{
    class MapaEdificio<<entity>><<root>>{}
    class GrelhaEdificio<<vo>>{}

    Edificio --> "1" MapaEdificio : "tem"
    MapaEdificio --> "1" GrelhaEdificio
}

package "<<agr Piso>>"{
    class Piso<<entity>><<root>>{}
    class DesignaçãoPiso<<vo>>{}

    Edificio --> "*" Piso : "contém"
    Piso --> "1" DesignaçãoPiso
}

' Refere-se a Sala/Gabinete
package "<<agr Sala>>"{
    class Sala<<entity>><<root>>{}
    class DesignacaoSala<<vo>>{}

    Piso --> "*" Sala
    Sala --> "1" DesignacaoSala
}

package "<<agr Passagem>>"{
    class Passagem<<entity>><<root>>{}
    class PassagemDesignacao<<vo>>{}

    Passagem --> "1" PassagemDesignacao
    Passagem --> "1" Piso
    Passagem --> "1" Piso 
    Passagem --> "1" Edificio
    Passagem --> "1" Edificio
}

package "<<agr Utilizador>>"{
    class Utilizador<<entity>><<root>>{}
    class Nome<<vo>>{}
    class NomeUtilizador<<vo>>{}
    class PasswordUtilizador<<vo>>{}

    Utilizador --> "1" Nome
    Utilizador --> "1" NomeUtilizador
    Utilizador --> "1" PasswordUtilizador
}

package "<<agr GestorFrota>>"{
    class GestorFrota <<entity>><<root>> {}
    GestorFrota --|> Utilizador
}

package "<<agr Administrador>>"{
    class Administrador <<entity>><<root>>{}
    Administrador --|> Utilizador
}

package "<<agr GestorCampus>>"{
    class GestorCampus <<entity>><<root>>{}
    GestorCampus --|> Utilizador
}

package "<<agr Utente>>"{
    class Utente <<entity>><<root>>{}
    Utente --|> Utilizador
}

' Faz sentido o drone e o robo existirem por si só?
package "<<agr DroneISEP>>"{

}
package "<<agr RobISEP>>"{
    class RobISEP<<root>><<entity>>{}
    ' Tarefas: Vigilância e transporte de objetos
    class DesignacaoRobo<<vo>>{}

    RobISEP --> "1" DesignacaoRobo
}

package "<<agr TipoRobo>>"{
    class TipoRobo<<root>><<entity>>{}
    class Tarefa<<enum>>{}

    RobISEP --> "1" TipoRobo
    TipoRobo --> "1" Tarefa
}






@enduml